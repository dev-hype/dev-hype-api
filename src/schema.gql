# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GqlCountry {
  key: String!
  name: String!
}

type GqlField {
  id: Int!
  name: String!
  specializations: [GqlSpecialization!]!
}

type GqlGoal {
  actualEndDate: DateTime
  createdAt: DateTime!
  estimatedEndDate: DateTime
  id: Int!
  isActive: Boolean!
  milestones: [GqlMilestone!]!
  name: String!
  startDate: DateTime
  topic: GqlTopic!
  topicId: Int!
  updatedAt: DateTime!
  userId: String!
}

type GqlGoalsResponse {
  count: Int!
  limit: Int!
  list: [GqlGoal!]!
  page: Int!
}

type GqlMilestone {
  actualEndDate: DateTime
  createdAt: DateTime!
  durationInHours: Int!
  estimatedEndDate: DateTime!
  goalId: Int!
  id: Int!
  isActive: Boolean!
  name: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type GqlSpecialization {
  fieldId: Int!
  id: Int!
  name: String!
}

type GqlTopic {
  id: Int!
  name: String!
  specializationId: Int!
}

type GqlUser {
  email: String!
  id: String!
}

type Mutation {
  createGoal(name: String!, specializationId: Int!, topicName: String!): GqlGoal!
  deleteGoal(id: Int!): GqlGoal!
  login(email: String!, password: String!): String!
  signup(email: String!, password: String!): String!
  updateGoal(id: Int!, name: String): GqlGoal!
}

type Query {
  countries: [GqlCountry!]!
  fields: [GqlField!]!
  goal(id: Int!): GqlGoal
  goals(limit: Int, page: Int, topicId: Int, userId: String): GqlGoalsResponse!
  me: GqlUser!
  milestone(id: Int!): GqlMilestone
  specializationTopics(id: Int!, search: String): [GqlTopic!]!
}